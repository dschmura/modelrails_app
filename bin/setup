#!/usr/bin/env ruby
require "fileutils"
require "find"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")


  # Get the name of the parent directory
  app_name = File.basename(Dir.getwd)
  app_name_upcase = app_name.upcase
  app_name_camel = app_name.split('_').map(&:capitalize).join('')
  
  # Rename all occurrences of "modelrails", "MODELRAILS_APP", and "ModelrailsApp" to appropriate app names
  Find.find('./') do |path|
    next if path == './bin/setup'
    next if path == './bin/setup'
    
    if File.file?(path)
      text = File.read(path)
  
      # Use gsub to replace all occurrences
      replaced_text = text.gsub('modelrails', app_name)
                          .gsub('MODELRAILS_APP', app_name_upcase)
                          .gsub('ModelrailsApp', app_name_camel)
                          .gsub('Model Rails Template', app_name_camel)
                          
  
      # Write changes to the file if any replacements were made
      File.open(path, 'w') { |f| f.puts replaced_text } if text != replaced_text
    end
  end
  

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Starting application in development =="
  system! "bin/dev"
end

# Run the setup_github script
require_relative '../setup_github'
SetupGithub.setup
